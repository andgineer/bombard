#!/usr/bin/env python3
"""
Send stress requests to show multi-processing Db problem
"""
from threading import Thread
import http.client
import sys
from queue import Queue
from urllib.parse import urlparse
import ssl
import json


concurrent = 200
token = None


def do_work():
    while True:
        job = q.get()
        status = send_request(job)
        report(status, job)
        q.task_done()


def send_request(job):
    try:
        url = urlparse(job['url'])
        print(job['id'], '>'*6)
        conn = http.client.HTTPSConnection(
            url.netloc,
            context=ssl._create_unverified_context()
        )
        conn.request(
            job['method'],
            url.path,
            headers={
                'Content-Type': "application/json",
                'Authorization': f"Bearer {token}"
            }
        )
        res = conn.getresponse()
        return res.status
    except Exception as e:
        return f'{e}', job['id']


def report(status, job):
    print(job['id'], '...', '<' * 6, status)


def get_token(ourl):
    auth_body = {
        'email': 'Andrei_Sorokin2@epam.com',
        'password': 'admin',
    }
    url = urlparse(ourl)
    conn = http.client.HTTPSConnection(
        url.netloc,
        context=ssl._create_unverified_context()
    )
    conn.request(
        'POST',
        url.path,
        body=json.dumps(auth_body),
        headers={
            'Content-Type': "application/json"
        }
    )
    return json.loads(conn.getresponse().read())['token']


token = get_token('https://localhost/api/auth')
print(token)


q = Queue(concurrent * 2)
for i in range(concurrent):
    t = Thread(target=do_work)
    t.daemon = True
    t.start()
try:
    for url in ['https://localhost/api/users', 'https://localhost/api/projects'] * 10:
        q.put({'id': q.qsize(), 'url': url.strip(), 'method': 'GET'})
    q.join()
except KeyboardInterrupt:
    sys.exit(1)
